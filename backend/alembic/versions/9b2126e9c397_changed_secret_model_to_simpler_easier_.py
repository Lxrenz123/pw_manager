"""changed secret model to simpler easier to handle

Revision ID: 9b2126e9c397
Revises: df7c5781454a
Create Date: 2025-09-08 11:48:34.189658

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b2126e9c397'
down_revision: Union[str, Sequence[str], None] = 'df7c5781454a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_id'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_credential_id'), table_name='credential')
    op.drop_table('credential')
    op.drop_index(op.f('ix_note_id'), table_name='note')
    op.drop_table('note')
    op.add_column('secret', sa.Column('data_encrypted', sa.LargeBinary(), nullable=False))
    op.create_index(op.f('ix_secret_vault_id'), 'secret', ['vault_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_secret_vault_id'), table_name='secret')
    op.drop_column('secret', 'data_encrypted')
    op.create_table('note',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('secret_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('note_enc', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['secret_id'], ['secret.id'], name=op.f('note_secret_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('note_pkey'))
    )
    op.create_index(op.f('ix_note_id'), 'note', ['id'], unique=False)
    op.create_table('credential',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('secret_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('username_enc', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('password_enc', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('url_enc', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('note_enc', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['secret_id'], ['secret.id'], name=op.f('credential_secret_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('credential_pkey')),
    sa.UniqueConstraint('secret_id', name=op.f('credential_secret_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_credential_id'), 'credential', ['id'], unique=False)
    op.create_table('document',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('secret_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('filename_enc', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('document_blob_enc', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['secret_id'], ['secret.id'], name=op.f('document_secret_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('document_pkey'))
    )
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)
    # Alembic-Migration (Beispiel)
 
    # ### end Alembic commands ###
