"""removed title from secret model

Revision ID: e52a34027885
Revises: 4f6fdef2067e
Create Date: 2025-09-14 13:04:34.736350

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e52a34027885'
down_revision: Union[str, Sequence[str], None] = '4f6fdef2067e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_secret_id'), table_name='secret')
    op.drop_index(op.f('ix_secret_vault_id'), table_name='secret')
    op.drop_table('secret')
    op.drop_index(op.f('ix_vault_id'), table_name='vault')
    op.drop_table('vault')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vault',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vault_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='vault_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vault_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_vault_id'), 'vault', ['id'], unique=False)
    op.create_table('secret',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', postgresql.ENUM('CREDENTIAL', 'NOTE', 'DOCUMENT', name='secrettype'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('vault_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('data_encrypted', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('encrypted_secret_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('secret_key_iv', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('secret_iv', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['vault_id'], ['vault.id'], name=op.f('secret_vault_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('secret_pkey'))
    )
    op.create_index(op.f('ix_secret_vault_id'), 'secret', ['vault_id'], unique=False)
    op.create_index(op.f('ix_secret_id'), 'secret', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('user_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('iv', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    # ### end Alembic commands ###
