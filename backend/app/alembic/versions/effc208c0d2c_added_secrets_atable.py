"""added secrets atable

Revision ID: effc208c0d2c
Revises: 7c5e9e7e7e98
Create Date: 2025-09-08 05:22:44.164407

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'effc208c0d2c'
down_revision: Union[str, Sequence[str], None] = '7c5e9e7e7e98'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('secret',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('CREDENTIAL', 'NOTE', 'DOCUMENT', name='secrettype'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('vault_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vault_id'], ['vault.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_secret_id'), 'secret', ['id'], unique=False)
    op.create_table('credential',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('secret_id', sa.Integer(), nullable=False),
    sa.Column('username_enc', sa.LargeBinary(), nullable=True),
    sa.Column('password_enc', sa.LargeBinary(), nullable=True),
    sa.Column('url_enc', sa.LargeBinary(), nullable=True),
    sa.Column('note_enc', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['secret_id'], ['secret.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('secret_id')
    )
    op.create_index(op.f('ix_credential_id'), 'credential', ['id'], unique=False)
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('secret_id', sa.Integer(), nullable=False),
    sa.Column('filename_enc', sa.LargeBinary(), nullable=False),
    sa.Column('document_blob_enc', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['secret_id'], ['secret.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('secret_id', sa.Integer(), nullable=False),
    sa.Column('note_enc', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['secret_id'], ['secret.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_note_id'), 'note', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_note_id'), table_name='note')
    op.drop_table('note')
    op.drop_index(op.f('ix_document_id'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_credential_id'), table_name='credential')
    op.drop_table('credential')
    op.drop_index(op.f('ix_secret_id'), table_name='secret')
    op.drop_table('secret')
    # ### end Alembic commands ###
